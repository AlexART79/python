# Python CircleCI 2.0 configuration file
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.0-browsers
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: download allure
          command: |
            curl -LO https://qameta.bintray.com/generic/io/qameta/allure/allure/2.7.0/allure-2.7.0.zip --output allure-2.7.0.zip
            unzip allure-2.7.0.zip            
          
      # run tests
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest phase5/ -v -l --reruns 2 --alluredir=test_results --junitxml=test_results/results.xml       
          
      - run:
          name: generate report
          command: |
            ./allure-2.7.0/bin/allure generate test_results -o test_report            
          when: always
      
      - run:
          name: archive results
          command: |
            mkdir artifacts
            zip -r artifacts/test_results.zip test_results
            zip -r artifacts/test_report.zip test_reports
      
      - store_test_results:
          path: test_results/results.xml          
          
      - store_artifacts:
          path: artifacts

          