{"name": "test_search_no_results", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <bound method Random.choice of <random.Random object at 0x000002144F31CED8>>([True, False])\n +    where <bound method Random.choice of <random.Random object at 0x000002144F31CED8>> = random.choice", "trace": "self = <src.tests.test_api.TestIssue object at 0x00000214514B8898>\n\n    @allure.step\n    @allure.tag('API')\n    @allure.feature('Issues management backend')\n    @allure.story('Search issues (no results)')\n    @allure.severity(allure.severity_level.TRIVIAL)\n    @pytest.mark.flaky(reruns=3)\n    def test_search_no_results(self):\n        jira = Jira()\n        jira.authenticate(\"Alexander_Artemov\", \"Alexander_Artemov\")\n    \n        query = 'summary~\"no_issues_should_be_found\"'\n        r = jira.search_issues_g(query)\n        assert r.status_code == 200\n    \n        data = json.loads(r.content)\n        assert data[\"total\"] == 0\n    \n        #random failing test (for re-runs)\n>       assert random.choice([True, False])\nE       assert False\nE        +  where False = <bound method Random.choice of <random.Random object at 0x000002144F31CED8>>([True, False])\nE        +    where <bound method Random.choice of <random.Random object at 0x000002144F31CED8>> = random.choice\n\nsrc\\tests\\test_api.py:135: AssertionError"}, "steps": [{"name": "test_search_no_results", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <bound method Random.choice of <random.Random object at 0x000002144F31CED8>>([True, False])\n +    where <bound method Random.choice of <random.Random object at 0x000002144F31CED8>> = random.choice\n", "trace": "  File \"c:\\users\\aartemov\\pycharmprojects\\pythoncourse\\phase4\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 141, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\aartemov\\PycharmProjects\\pythoncourse\\phase5\\src\\tests\\test_api.py\", line 135, in test_search_no_results\n    assert random.choice([True, False])\n"}, "start": 1537515485727, "stop": 1537515485957}], "start": 1537515485727, "stop": 1537515485957, "uuid": "61ec4cab-f130-4d6a-8a55-938bc21ba0af", "historyId": "808d3fe0fa504ce9b79535ff1296aa98", "fullName": "src.tests.test_api.TestIssue#test_search_no_results", "labels": [{"name": "tag", "value": "API"}, {"name": "feature", "value": "Issues management backend"}, {"name": "severity", "value": "trivial"}, {"name": "story", "value": "Search issues (no results)"}, {"name": "tag", "value": "@pytest.mark.flaky(reruns=3)"}, {"name": "tag", "value": "@pytest.mark.flaky(reruns=3)"}, {"name": "parentSuite", "value": "src.tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestIssue"}, {"name": "host", "value": "odp1210013"}, {"name": "thread", "value": "20216-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.tests.test_api"}]}